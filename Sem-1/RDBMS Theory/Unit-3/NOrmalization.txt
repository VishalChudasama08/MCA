StudentID, StudentName, CourseID, CourseName, InstructorID, InstructorName
-------------------------------------------
First Normal Form (1NF)
-------------------------------------------
(StudentID, StudentName, CourseID, CourseName, InstructorID, InstructorName)
-------------------------------------------
Second Normal Form (2NF)
-------------------------------------------
partial dependency (non-key attributes depending on part of composite key).
Here, the key = (StudentID, CourseID).

StudentName depends only on StudentID.

CourseName, InstructorID, InstructorName depend only on CourseID.

So, split:

STUDENT(StudentID, StudentName)
COURSE(CourseID, CourseName, InstructorID, InstructorName)
ENROLLMENT(StudentID, CourseID)
-------------------------------------------
Third Normal Form (3NF)
-------------------------------------------

ðŸ‘‰ Remove transitive dependency (non-key â†’ non-key).
In COURSE relation:

CourseID â†’ InstructorID

and InstructorID â†’ InstructorName (transitive).

So, split COURSE into:

COURSE(CourseID, CourseName, InstructorID)
INSTRUCTOR(InstructorID, InstructorName)

Now we have:

STUDENT(StudentID, StudentName)

COURSE(CourseID, CourseName, InstructorID)

INSTRUCTOR(InstructorID, InstructorName)

ENROLLMENT(StudentID, CourseID)

-------------------------------------------
Step 5: Boyce-Codd Normal Form (BCNF)
-------------------------------------------

ðŸ‘‰ Every determinant must be a candidate key.

Check relations:

STUDENT: StudentID â†’ StudentName âœ…

COURSE: CourseID â†’ CourseName, InstructorID âœ…

INSTRUCTOR: InstructorID â†’ InstructorName âœ…

ENROLLMENT: composite key (StudentID, CourseID) âœ…



-------------------------------------------
-------------------------------------------
Example Relation: EMPLOYEE_PROJECT

Attributes:
EmpID, EmpName, DeptID, DeptName, ProjectID, ProjectName, ProjectLocation


-------------------------------------------
First Normal Form (1NF)
-------------------------------------------

ðŸ‘‰ Remove repeating groups:

(EmpID, EmpName, DeptID, DeptName, ProjectID, ProjectName, ProjectLocation)


-------------------------------------------
Second Normal Form (2NF)
-------------------------------------------

ðŸ‘‰ Key = (EmpID, ProjectID).

EmpName, DeptID, DeptName depend only on EmpID.

ProjectName, ProjectLocation depend only on ProjectID.

So split into:

EMPLOYEE(EmpID, EmpName, DeptID, DeptName)

PROJECT(ProjectID, ProjectName, ProjectLocation)

WORKS_ON(EmpID, ProjectID)


-------------------------------------------
Third Normal Form (3NF)
-------------------------------------------

ðŸ‘‰ Remove transitive dependency.
In EMPLOYEE: DeptID â†’ DeptName (transitive).

So split EMPLOYEE:

EMPLOYEE(EmpID, EmpName, DeptID)

DEPARTMENT(DeptID, DeptName)

Now we have:

EMPLOYEE(EmpID, EmpName, DeptID)

DEPARTMENT(DeptID, DeptName)

PROJECT(ProjectID, ProjectName, ProjectLocation)

WORKS_ON(EmpID, ProjectID)

-------------------------------------------
Boyceâ€“Codd Normal Form (BCNF)
-------------------------------------------

ðŸ‘‰ Check determinants:

EmpID â†’ EmpName, DeptID âœ…

DeptID â†’ DeptName âœ…

ProjectID â†’ ProjectName, ProjectLocation âœ…

(EmpID, ProjectID) â†’ WORKS_ON âœ…

All determinants are candidate keys â†’ Schema is in BCNF.

âœ… Final BCNF Schema:
-------------------------------------------

EMPLOYEE(EmpID, EmpName, DeptID)

DEPARTMENT(DeptID, DeptName)

PROJECT(ProjectID, ProjectName, ProjectLocation)

WORKS_ON(EmpID, ProjectID)